// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI_EFCompany;

namespace WebAPI_EFCompany.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220926195537_replace_init_content")]
    partial class replace_init_content
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("WebAPI_EFCompany.Model.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HeadId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HeadId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("WebAPI_EFCompany.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PositionNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PositionNumber");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WebAPI_EFCompany.Model.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HeadId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Salary")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VacationDayCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("HeadId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("WebAPI_EFCompany.Model.Department", b =>
                {
                    b.HasOne("WebAPI_EFCompany.Model.Employee", "Head")
                        .WithMany()
                        .HasForeignKey("HeadId");

                    b.Navigation("Head");
                });

            modelBuilder.Entity("WebAPI_EFCompany.Model.Employee", b =>
                {
                    b.HasOne("WebAPI_EFCompany.Model.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("WebAPI_EFCompany.Model.Member", "Member", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Age")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("FirstName")
                                .HasColumnType("TEXT");

                            b1.Property<string>("LastName")
                                .HasColumnType("TEXT");

                            b1.Property<string>("MiddleName")
                                .HasColumnType("TEXT");

                            b1.Property<string>("PassportNumber")
                                .HasColumnType("TEXT");

                            b1.Property<string>("PassportSeries")
                                .HasColumnType("TEXT");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.Navigation("Member");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("WebAPI_EFCompany.Model.Position", b =>
                {
                    b.HasOne("WebAPI_EFCompany.Model.Department", "Department")
                        .WithMany("Positions")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI_EFCompany.Model.Employee", "Head")
                        .WithMany()
                        .HasForeignKey("HeadId");

                    b.Navigation("Department");

                    b.Navigation("Head");
                });

            modelBuilder.Entity("WebAPI_EFCompany.Model.Department", b =>
                {
                    b.Navigation("Positions");
                });

            modelBuilder.Entity("WebAPI_EFCompany.Model.Position", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
